- statistic = video.statistic
- submissions_count = video.submissions.count

= content_tag_for(:tr, video, class: time_period_class(video) + draft_class(video))
  th
    - unless video.published?
      span title=draft_message(video)
        => fa_icon 'ban'.freeze
    - unless current_course_user&.student? && current_course_user&.timeline_algorithm == 'fixed'
      = render partial: 'course/lesson_plan/items/personal_time_boolean_icons', locals: { item: video }
    = link_to(format_inline_text(video.title),
      course_video_path(current_course, video))
  td.table-start-at
    = render partial: 'course/lesson_plan/items/personal_or_ref_time',
             locals: {item: video, course_user: current_course_user, attribute: :start_at, datetime_format: :short}
  td.table-buttons
    div.btn-group.attempt
      = render partial: 'video_attempt_button', locals: { video: video }
  - if can?(:analyze, video)
    td.hidden-xs.text-center
      = t('.submissions_count', submissions_count:  submissions_count, students_count: student_count)
      - if statistic
        td.hidden-xs
          = display_progress_bar(statistic.percent_watched) do
            = t('.progress', progress: statistic.percent_watched)
  - if can?(:manage, video)
    td.table-buttons.hidden-xs
      = render partial: 'video_management_buttons', locals: { video: video }
