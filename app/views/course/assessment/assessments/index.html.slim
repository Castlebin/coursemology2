= page_header format_inline_text(@category.title) do
  - if can?(:create, Course::Assessment.new(tab: @tab))
    div.pull-right
      div.dropdown
        button.btn.btn-info.dropdown-toggle#new-assessment type='button' data-toggle='dropdown' aria-expanded='true'
          => t('common.new')
          span.caret
        ul.dropdown-menu.dropdown-menu-right role='menu' aria-labelledby='new-assessment'
          li role='presentation'
            = link_to(t('.new_assessment.autograded'),
              [:new, current_course, :assessment, category: @category.id, tab: @tab.id, autograded: true],
              role: 'menuitem')
          li role='presentation'
            = link_to(t('.new_assessment.manually_graded'),
              [:new, current_course, :assessment, category: @category.id, tab: @tab.id, autograded: false],
              role: 'menuitem')

= display_assessment_tabs

table.table.assessments-list.table-hover
  thead
    tr
      th = t('.title')
      th
      - if current_course.gamified?
        th.table-experience-points = t('.maximum_experience_points')
      - unless current_component_host[:course_achievements_component].nil?
        th.table-requirement-for = t('.requirement_for')
      th.table-start-at = t('.start_at')
      - if current_course.gamified?
        th.table-bonus-cut-off = t('.bonus_cut_off')
      th.table-end-at = t('.end_at')
      th
      th
  tbody
    = render partial: 'assessment', collection: @assessments
