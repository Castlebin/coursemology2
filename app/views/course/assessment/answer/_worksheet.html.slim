- if answer.submission.attempting? && answer.specific.is_a?(Course::Assessment::Answer::Programming)
  - programming_answer = answer.specific
  - if answer.question.actable.attempt_limit
    - button_text = t('.run_code_with_limit', limit: programming_answer.attempting_times_left)
  - else
    - button_text = t('.run_code')

  - if answer.attempting?
    div.btn-group
      = link_to_reset_answer(answer)
      = base_answer_form.button :button, button_text, value: answer.id,
        name: 'attempting_answer_id', class: ['submit-answer', 'btn-danger'], disabled: !enable_submit_button?(programming_answer)
  - elsif answer.submitted? && job = answer.try(:auto_grading).try(:job)
    - if job.errored?
      p.bg-danger = t('.error')
      = base_answer_form.button :button, button_text, value: answer.id, name: 'attempting_answer_id', class: ['submit-answer', 'btn-danger']
    - elsif job.submitted?
      = link_to '#', class: ['btn', 'btn-danger', 'submitted'], 'data-job-path': job_path(job), disabled: true do
        => button_text
        = fa_icon 'spinner lg spin'

h3 = t('.comments')
div.comments id=comments_container_id(answer)
  - topic = answer.discussion_topic
  = div_for(topic, 'data-topic-id' => topic.id)
    = render partial: 'course/assessment/answer/comments',
             locals: { answer: answer }
