- assessment = assessments_hash[submission.assessment_id]
= content_tag_for(:tr, submission) do
  td.text-center = (current_page - 1) * per_page + submission_counter + 1
  td = link_to_course_user(submission.course_user)
  td = link_to(format_inline_text(assessment.title),
               course_assessment_path(current_course, assessment))
  td.table-submitted-at
   = format_datetime(submission.submitted_at, :short) if submission.submitted_at
  td.table-workflow-state
    = Course::Assessment::Submission.human_attribute_name(submission.workflow_state)
  - if pending
    td
      - @service.group_managers_of(submission.course_user).each do |manager|
        div
          = link_to_course_user(manager) do |course_user|
            = format_inline_text(course_user.name)

  - can_see_grades = \
      submission.published? || (submission.graded? && can?(:grade, submission.assessment))
  - if can_see_grades
    td.table-grade
      = submission.grade.to_f.to_s + ' / ' + assessment.maximum_grade.to_s
      - if submission.graded?
        span.text-danger title=t('.graded_not_published_warning')
          =< fa_icon 'exclamation-circle'.freeze
    - if current_course.gamified?
      td.table-current-points-awarded = submission.current_points_awarded
  - else
    td.table-grade = '-- / ' + assessment.maximum_grade.to_s
    - if current_course.gamified?
      td

  td.table-buttons
    - button_class = ['btn', 'btn-block']
    - link_path = edit_course_assessment_submission_path(current_course, assessment, submission)
    - if current_course_user&.teaching_staff? && submission.submitted?
      = link_to(t('.grade'), link_path, class: button_class + ['btn-info'])
    - else
      = link_to(t('.view'), link_path, class: button_class + ['btn-primary'])
  td
