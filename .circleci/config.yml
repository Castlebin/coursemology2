# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          PG_HOST: localhost
          PG_USER: ubuntu
          RAILS_ENV: test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.11
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: coursemology_test

    parallelism: 4

    working_directory: ~/repo

    steps:
      - checkout

      # Install ghostscript so `identify` in ImageMagick works with PDF files.
      - run: sudo apt update && sudo apt install ghostscript

      # Checkout submodules
      - run: git submodule update --init --recursive

      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without development:production --deployment

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: Setup DB
          command: |
            bundle exec rake db:setup
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/coursemology_test"

      # Build frontend JS
      - run: cd client && yarn install --production && yarn build:production && cd -

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/coursemology_test"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
